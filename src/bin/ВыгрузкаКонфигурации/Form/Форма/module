
Процедура КнопкаРазобратьКонфигурациюНажатие(Кнопка)
	//РазобратьФайлКонфигурации(ПутьКФайлуКонфигурации, ПутьККаталогуДляВыгрузки);
	
	ОпцияРабочийКаталог = ?(не ПустаяСтрока(РабочийКаталог), ";pathTemp;"+РабочийКаталог+";", "");
	Строка = "pathToCF;"+ПутьКФайлуКонфигурации+";pathOut;"+ПутьККаталогуДляВыгрузки+";decompile;"+ОпцияРабочийКаталог;	
	ОбработатьПараметрыЗапуска(Строка);	
	

КонецПроцедуры

Процедура ОбработатьПараметрыЗапускаОжидание() 
	Перем мАвтозапуск;
	мАвтозапуск = Ложь;
	
	Если ЗначениеЗаполнено(ПараметрЗапуска) Тогда
		МассивПараметрыЗапуска = РазложитьСтрокуВМассивПодстрок(ПараметрЗапуска,";");
		Для Номер = 0 По МассивПараметрыЗапуска.Количество()-1 Цикл
		ЭлементМассива = МассивПараметрыЗапуска.Получить(Номер);
			Если ВРег(ЭлементМассива) = ВРег("auto") Тогда
				мАвтозапуск = Истина;
			КонецЕсли;
			
			Если ВРег(ЭлементМассива) = ВРег("out") Тогда
				
				Путь = УбратьОбрамляющиеКавычкиЕслиЕсть(МассивПараметрыЗапуска.Получить(Номер+1));
				ПутьКФайлуЛогов = Путь;
				
			КонецЕсли;
		КонецЦикла;
		
		ЗаписатьОшибкуВЛог(ПутьКФайлуЛогов, "1");
		Попытка
			ОбработатьПараметрыЗапуска(ПараметрЗапуска);
			ЗаписатьОшибкуВЛог(ПутьКФайлуЛогов, "0");
		Исключение
			ЗаписатьОшибкуВЛог(ПутьКФайлуЛогов, "1"+ОписаниеОшибки());
			Если мАвтозапуск Тогда
				ЗавершитьРаботуСистемы(Ложь);
			КонецЕсли;
		КонецПопытки;

	КонецЕсли;
		
	Если мАвтозапуск Тогда
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
	
КонецПроцедуры


Процедура ПриОткрытии()

	ПутьКПлатформе1с83 = ПолучитьПутьПлатформы1С_83();
	
	Если ЗначениеЗаполнено(ПараметрЗапуска) Тогда
		ПодключитьОбработчикОжидания("ОбработатьПараметрыЗапускаОжидание", 0.02, Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ДиалогВыбораКаталогаИФайла(РежимДиалога =  Неопределено, Значение =  "") 
	
	Если РежимДиалога = Неопределено Тогда
		РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога;
	КонецЕсли;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалога);
	ДиалогВыбораКаталога.Каталог = Значение;
	
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		
		Если РежимДиалога = РежимДиалогаВыбораФайла.ВыборКаталога Тогда
			Значение = ДиалогВыбораКаталога.Каталог;
		Иначе
			Значение = ДиалогВыбораКаталога.ПолноеИмяФайла;
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции


Процедура ПутьКФайлуКонфигурацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = НЕ ДиалогВыбораКаталогаИФайла(РежимДиалогаВыбораФайла.Открытие, Элемент.Значение);
	
КонецПроцедуры


Процедура ПутьККаталогуДляВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = НЕ ДиалогВыбораКаталогаИФайла(РежимДиалогаВыбораФайла.ВыборКаталога, Элемент.Значение);
КонецПроцедуры


Процедура ПутьКБазеДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = НЕ ДиалогВыбораКаталогаИФайла(РежимДиалогаВыбораФайла.ВыборКаталога, Элемент.Значение);
КонецПроцедуры

Процедура РабочийКаталогНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = НЕ ДиалогВыбораКаталогаИФайла(РежимДиалогаВыбораФайла.ВыборКаталога, Элемент.Значение);
	ЭтотОбъект.БылаИнициализация = Ложь;
КонецПроцедуры

Процедура ОсновныеДействияФормыКнопкаПолучитьКонфигурациюПоНомеруВерсииХранилища1С(Кнопка)
	лПараметры = Новый Структура;
		//лПараметры.Вставить("ПутьКФайлуХранилища1С", _ПолучитьПутьКВременномуФайлуХранилища1С());
	лПараметры.Вставить("ПутьКХранилищу1C", ПутьКХранилищу1C);
	лПараметры.Вставить("НомерВерсииХранилища", НомерВерсииХранилища);
	
	лПараметры.Вставить("Пользователь", Пользователь);
	лПараметры.Вставить("Пароль", Пароль);
	лПараметры.Вставить("ПользовательХранилища", ПользовательХранилища);
	лПараметры.Вставить("ПарольХранилища", ПарольХранилища);
	
	лПараметры.Вставить("ПутьКБазе", ПутьКБазе);
	
	резПутьКФайлуКонфигурации = "";
	версияПлатформыДляБазы = "8.2"; // TODO версию платформы не нужно явно указывать
	ПутьКФайлуХранилища1С = ПутьКХранилищу1C;//lpautov
	
	успешно = ПоНомеруВерсииСохранитьКонфигурациюИзХранилища1С(ПутьКБазе, версияПлатформыДляБазы, Пользователь, Пароль, ПутьКХранилищу1C, ПользовательХранилища, ПарольХранилища, 
		ПутьКФайлуХранилища1С, НомерВерсииХранилища, резПутьКФайлуКонфигурации);
		//ПолучитьКонфигурациюПоНомеруВерсииХранилища1С(ПутьКФайлуКонфигурации, ПутьККаталогуДляВыгрузки, ПутьКБазе);
КонецПроцедуры


Процедура ЗаполнитьДанныеБазы_1C2GitНажатие(Элемент)
	лПараметры = Новый Структура;
		//лПараметры.Вставить("ПутьКФайлуХранилища1С", _ПолучитьПутьКВременномуФайлуХранилища1С());
	лПараметры.Вставить("ПутьКХранилищу1C", "tcp://ws-msk-a2354:3542/1C2Git");
	//лПараметры.Вставить("НомерВерсииХранилища", НомерВерсииХранилища);
	
	лПараметры.Вставить("Пользователь", "");
	лПараметры.Вставить("Пароль", "");
	лПараметры.Вставить("ПользовательХранилища", "Отладка");
	лПараметры.Вставить("ПарольХранилища", "");
	
	лПараметры.Вставить("ПутьКБазе", "File=""W:\Конфигурации\Связной\1C2Git_Отладка""");
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, лПараметры);
	//ЗаполнитьЗначенияСвойств(ЭтотОбъект, лПараметры);
КонецПроцедуры


Процедура КнопкаСобратьКонфигурациюНажатие(Элемент)
	//СобратьФайлКонфигурации(ПутьКФайлуКонфигурации, ПутьККаталогуДляВыгрузки);
	
	ОпцияРабочийКаталог = ?(не ПустаяСтрока(РабочийКаталог), ";pathTemp;"+РабочийКаталог+";", "");
	Строка = "pathToCF;"+ПутьКФайлуКонфигурации+";pathOut;"+ПутьККаталогуДляВыгрузки+";compile;"+ОпцияРабочийКаталог + "fixbugRoleImport";	
	Сообщить("Запускаю строку " + Строка);
	
	ОбработатьПараметрыЗапуска(Строка);
	
КонецПроцедуры


Процедура СинхронизироватьХранилищеСГитНажатие(Элемент)
	//СинхронизироватьХранилищеСГит(ПутьКХранилищу1C, ПутьККаталогуДляВыгрузки);
	
	ОпцияРабочийКаталог = ?(не ПустаяСтрока(РабочийКаталог), ";pathTemp;"+РабочийКаталог+";", "");
	Строка = "pathRepo;"+ПутьКХранилищу1C+";pathOut;"+ПутьККаталогуДляВыгрузки+";sync1ctogit;"+ОпцияРабочийКаталог;
	ОбработатьПараметрыЗапуска(Строка);
КонецПроцедуры




